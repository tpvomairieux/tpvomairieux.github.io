ggplot(top_danceable, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "orchid") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 3) +
coord_flip() +
labs(title = "Top 10 Most Danceable Spotify Artists",
x = "Artist",
y = "Average Danceability") +
theme_minimal()
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 50)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 3) +
coord_flip() +
labs(title = "Top 10 Most Danceable Artists (Popular Tracks Only, >50)",
x = "Artist",
y = "Average Danceability") +
theme_minimal()
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 70)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 3) +
coord_flip() +
labs(title = "Top 10 Most Danceable Artists (Popular Tracks Only, >50)",
x = "Artist",
y = "Average Danceability") +
theme_minimal()
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 3) +
coord_flip() +
labs(title = "Top 10 Most Danceable Artists (Popular Tracks Only, >50)",
x = "Artist",
y = "Average Danceability") +
theme_minimal()
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 95)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 3) +
coord_flip() +
labs(title = "Top 10 Most Danceable Artists (Popular Tracks Only, >50)",
x = "Artist",
y = "Average Danceability") +
theme_minimal()
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "steelblue") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 3) +
coord_flip() +
labs(title = "Top 10 Most Danceable Artists (Popular Tracks Only, >50)",
x = "Artist",
y = "Average Danceability") +
theme_minimal()
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "azure") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Frat Party Final Bosses (Most Danceable Artists filtered by Popular Tracks >90",
x = "Artist",
y = "Average Danceability") +
theme_minimal()
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2"") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Frat Party Final Bosses (Most Danceable Artists filtered by Popular Tracks >90",
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Frat Party Final Bosses (Most Danceable Artists filtered by Popular Tracks >90",
x = "Artist",
y = "Average Danceability") +
theme_minimal()
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Frat Party Final Bosses (Most Danceable Artists filtered by Popular Tracks >90",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 14))
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Frat Party Final Bosses (Most Danceable Artists filtered by Popular Tracks >90",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 10))
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Frat Party Final Bosses (Most Danceable Artists filtered by Popular Tracks >90",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 12))
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Frat Party Final Bosses (Most Danceable Artists filtered by Popular Tracks >90",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 12),
axis.text.y = element_text(size = 7)
)
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Frat Party Final Bosses (Most Danceable Artists filtered by Popular Tracks >90",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 12),
axis.text.y = element_text(size = 8)
)
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
# Filter for popular tracks
popular_tracks <- spotify |>
filter(track_popularity > 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Most Danceable Artists filtered by Popular Tracks >90 (Frat Party Final Bosses)",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 12),
axis.text.y = element_text(size = 8)
)
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
#| echo: true
#Filtered by popular tracks with scores >= 90
popular_tracks <- spotify |>
filter(track_popularity >= 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Most Danceable Artists filtered by Popular Tracks >=90 (Frat Party Final Bosses)",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 12),
axis.text.y = element_text(size = 8)
)
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
#| echo: true
#Filtered by popular tracks with scores >= 90
popular_tracks <- spotify |>
filter(track_popularity >= 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Most Danceable Artists filtered by Popular Tracks >=90 (Frat Party Final Bosses)",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 12),
axis.text.y = element_text(size = 8)
)
#| include: false
#| message: false
library(tidyverse)
#| include: false
# TidyTuesday Spotify Dataset (week 01-21-2020).
spotify <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-01-21/spotify_songs.csv')
#| echo: true
#Filtered by popular tracks with scores >= 90
popular_tracks <- spotify |>
filter(track_popularity >= 90)
# Top 10 artists by average danceability among popular tracks
top_danceable_popular <- popular_tracks |>
group_by(track_artist) |>
summarize(avg_danceability = mean(danceability, na.rm = TRUE),
.groups = "drop") |>
arrange(desc(avg_danceability)) |>
slice_head(n = 10)
# Plot
ggplot(top_danceable_popular, aes(x = reorder(track_artist, avg_danceability),
y = avg_danceability)) +
geom_col(fill = "darkseagreen2") +
geom_text(aes(label = round(avg_danceability, 2)),
hjust = -.1,
size = 2) +
coord_flip() +
labs(title = "Most Danceable Artists filtered by Popular Tracks >=90 (Frat Party Final Bosses)",
x = "Artist",
y = "Average Danceability") +
theme_bw()+
theme(plot.title = element_text(size = 12),
axis.text.y = element_text(size = 8)
)
quarto render
git push origin main --force
git push origin main --force
quarto render
